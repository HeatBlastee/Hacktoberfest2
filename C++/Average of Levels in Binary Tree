/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
        queue<TreeNode*>q;
        q.push(root);
        vector<double>ans;
        
        while(!q.empty()){
            int levelsize = q.size();
            double levelsum = 0.0;
            for(int i=0;i<levelsize;i++){
                TreeNode* top = q.front();
            q.pop();
            levelsum+=top->val;
            if(top->left){
                q.push(top->left);
            }
            if(top->right){
                q.push(top->right);
            }
            }
            
            ans.push_back(levelsum/levelsize);
        }
        return ans;
    }
};
